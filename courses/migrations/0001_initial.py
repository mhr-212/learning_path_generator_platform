# Generated by Django 5.2.4 on 2025-08-01 12:32

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the category', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of the category')),
                ('slug', models.SlugField(help_text='URL-friendly version of the category name', max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the course', max_length=200)),
                ('description', models.TextField(help_text='Detailed description of the course content')),
                ('short_description', models.CharField(help_text='Brief summary of the course', max_length=300)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', help_text='Difficulty level of this course', max_length=20)),
                ('course_type', models.CharField(choices=[('video', 'Video Course'), ('text', 'Text-based Course'), ('interactive', 'Interactive Course'), ('project', 'Project-based Course'), ('book', 'Book/eBook'), ('article', 'Article/Blog Post'), ('tutorial', 'Tutorial'), ('workshop', 'Workshop')], default='video', help_text='Type of course content', max_length=20)),
                ('duration_hours', models.PositiveIntegerField(help_text='Estimated duration to complete this course in hours', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(500)])),
                ('url', models.URLField(help_text='URL to access the course', validators=[django.core.validators.URLValidator()])),
                ('instructor', models.CharField(blank=True, help_text='Name of the course instructor or author', max_length=200)),
                ('platform', models.CharField(blank=True, help_text='Platform where the course is hosted (e.g., Coursera, Udemy, YouTube)', max_length=100)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, help_text='Course price (0.00 for free courses)', max_digits=10)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, help_text='Course rating (0.0 to 5.0)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('total_ratings', models.PositiveIntegerField(default=0, help_text='Total number of ratings')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='published', help_text='Current status of the course', max_length=20)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags for categorization', max_length=500)),
                ('prerequisites', models.TextField(blank=True, help_text='Prerequisites needed before taking this course')),
                ('learning_outcomes', models.TextField(blank=True, help_text='What students will learn from this course')),
                ('language', models.CharField(default='English', help_text='Primary language of the course', max_length=50)),
                ('certificate_available', models.BooleanField(default=False, help_text='Whether a certificate is available upon completion')),
                ('is_public', models.BooleanField(default=True, help_text='Whether this course is visible to other users')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, help_text='Category this course belongs to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='courses.category')),
                ('creator', models.ForeignKey(help_text='User who added this course', on_delete=django.db.models.deletion.CASCADE, related_name='created_courses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(help_text='Rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review_text', models.TextField(blank=True, help_text='Optional review text')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Course Review',
                'verbose_name_plural': 'Course Reviews',
                'ordering': ['-created_at'],
                'unique_together': {('course', 'user')},
            },
        ),
        migrations.CreateModel(
            name='UserCourseProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('progress_percentage', models.PositiveIntegerField(default=0, help_text='Progress percentage (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('time_spent_hours', models.DecimalField(decimal_places=2, default=0.0, help_text='Time spent on this course in hours', max_digits=6)),
                ('notes', models.TextField(blank=True, help_text="User's personal notes about the course")),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Course Progress',
                'verbose_name_plural': 'User Course Progress',
                'unique_together': {('user', 'course')},
            },
        ),
    ]
