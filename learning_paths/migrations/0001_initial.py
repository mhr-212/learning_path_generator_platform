# Generated by Django 5.2.4 on 2025-08-01 12:32

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the learning path', max_length=200)),
                ('description', models.TextField(help_text='Detailed description of what this learning path covers')),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', help_text='Difficulty level of this learning path', max_length=20)),
                ('estimated_duration_hours', models.PositiveIntegerField(help_text='Estimated time to complete this learning path in hours', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)])),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', help_text='Current status of the learning path', max_length=20)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags for categorization', max_length=500)),
                ('prerequisites', models.TextField(blank=True, help_text='Prerequisites needed before starting this learning path')),
                ('learning_objectives', models.TextField(help_text='What learners will achieve after completing this path')),
                ('is_public', models.BooleanField(default=True, help_text='Whether this learning path is visible to other users')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(help_text='User who created this learning path', on_delete=django.db.models.deletion.CASCADE, related_name='created_learning_paths', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Learning Path',
                'verbose_name_plural': 'Learning Paths',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LearningPathCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=1, help_text='Order of this course in the learning path')),
                ('is_required', models.BooleanField(default=True, help_text='Whether this course is required or optional')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this course in the context of the learning path')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='path_courses', to='courses.course')),
                ('learning_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='path_courses', to='learning_paths.learningpath')),
            ],
            options={
                'verbose_name': 'Learning Path Course',
                'verbose_name_plural': 'Learning Path Courses',
                'ordering': ['order'],
                'unique_together': {('learning_path', 'course')},
            },
        ),
        migrations.AddField(
            model_name='learningpath',
            name='courses',
            field=models.ManyToManyField(blank=True, related_name='learning_paths', through='learning_paths.LearningPathCourse', to='courses.course'),
        ),
        migrations.CreateModel(
            name='UserLearningProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('progress_percentage', models.PositiveIntegerField(default=0, help_text='Progress percentage (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('notes', models.TextField(blank=True, help_text="User's personal notes about their progress")),
                ('current_course', models.ForeignKey(blank=True, help_text='Current course the user is working on', null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.course')),
                ('learning_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='learning_paths.learningpath')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Learning Progress',
                'verbose_name_plural': 'User Learning Progress',
                'unique_together': {('user', 'learning_path')},
            },
        ),
    ]
